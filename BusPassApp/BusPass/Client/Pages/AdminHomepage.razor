@page "/adminHome"
@attribute [Authorize]
@inject IAuthenticationService AuthenticationService
@inject IBusPassportRepository busPassportRepository
@inject IPassportTypeRepository passportTypeRepository
@using System.Collections.ObjectModel
@inject NavigationManager NavigationManager

@if(passports == null ||types == null) {
    <p><em>Loading...</em></p>
} else {
    <html>
        <head>
            <link href="css/UserPaymentHistory.css" rel="stylesheet" />
        </head>
        <body>
            <h1 class="header" style="margin-bottom: 30px;">WELCOME @logedUser.Name @logedUser.Surname</h1>
                <div class="dropDownContainer">
                    <div class="dropdownItem">
                        <SfDropDownList TValue="bool" TItem="Validation" Value="@selectedValidation" DataSource="@validations">
                            <DropDownListEvents TValue="bool" ValueChange="onChangeValid"></DropDownListEvents>
                            <DropDownListFieldSettings Value="valid" Text="Name"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    <div class="dropdownItem">
                        <SfDropDownList TValue="string" TItem="PassType" Value="@selectedType" Placeholder="Select type" DataSource="@typesForComboBox">
                            <DropDownListEvents TValue="string" ValueChange="onChangeType"></DropDownListEvents>
                            <DropDownListFieldSettings Value="PassTypeId" Text="Name"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div> 
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Serial number</th>
                            <th scope="col">Holder</th>
                            <th scope="col">Date of issue</th>
                            <th scope="col">Passport type</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var pass in passports)
                            {
                                <tr style="cursor: pointer;" @onclick="@(e => goToUserProfile(pass.userId))">
                                    <th scope="row">#@pass.passportId</th>
                                    <td>@pass.holder</td>
                                    <td>@pass.dateOfIssue</td>
                                    <td>@pass.passType</td>
                                </tr>
                            }       
                    </tbody>
                </table>
                <div class="totalUsersWrapper">
                    Total number of users: @totalNumberOfUsers
                </div>
        </body>
        
    </html>
}

@code {
    private LoginUser logedUser;
    private bool selectedValidation;
    private ICollection<UserBusPassport> passports;
    private ICollection<PassType> types;
    private ICollection<PassType> typesForComboBox;
    private string selectedType;
    private int totalNumberOfUsers = 0;
    List<Validation> validations = new List<Validation>
    {
    new Validation() {Name="Valid", valid=true},
    new Validation() {Name="Invalid", valid=false},
    };
    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationService.checkIfAdmin())
        {
            try
            {
                this.logedUser = AuthenticationService.user;
                this.selectedValidation = true;
                this.types = await passportTypeRepository.getPassTypes();
                this.createAllType();
                this.passports = await busPassportRepository.getByValidity(this.selectedValidation);
                this.getTotalNumberOfUsers();
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
            }
        }
        else
        {
            await AuthenticationService.Logout();
        }
    }

    private async void onChangeValid(Syncfusion.Blazor.DropDowns.ChangeEventArgs<bool> args)
    {
        this.selectedValidation = args.Value;
        if (this.selectedType == "0")
        {
            this.passports = await busPassportRepository.getByValidity(this.selectedValidation);
        }
        else
        {
            this.passports = await busPassportRepository.getByType(this.selectedType, this.selectedValidation);
        }
        
        this.getTotalNumberOfUsers();
        StateHasChanged();
    }

    private async void onChangeType(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        this.selectedType = args.Value;
        if (this.selectedType == "0")
        {
            this.passports = await busPassportRepository.getByValidity(this.selectedValidation);
        }
        else
        {
            this.passports = await busPassportRepository.getByType(this.selectedType, this.selectedValidation);
        }
       
        this.getTotalNumberOfUsers();
        StateHasChanged();
    }

    private void createAllType()
    {
        typesForComboBox = new Collection<PassType>();

        PassType allType = new PassType
        {
            PassTypeId = 0,
            Name = "All",
        };

        this.typesForComboBox.Add(allType);

        foreach (var type in this.types)
        {
            this.typesForComboBox.Add(type);
        }
        this.selectedType = "0";
    }

    private void goToUserProfile(int userId) {
        NavigationManager.NavigateTo("userHistory?user=" + userId);
    }

    private void getTotalNumberOfUsers()
    {
        this.totalNumberOfUsers = 0;
        foreach (var pass in passports)
        {
            this.totalNumberOfUsers++;
        }
    }

    public class Validation
    {
        public string Name { get; set; }
        public bool valid { get; set; }
    }
}

